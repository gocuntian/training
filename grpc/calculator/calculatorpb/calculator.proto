syntax = "proto3";

package calculator;
option go_package="calculator/calculatorpb";

message SumRequest {
  int32 arg1 = 1;
  int32 arg2 = 2;
}

message SumResponse {
  int32 sum = 1;
}

message ComputeAverageRequest {
  int32 arg = 1;
}

message ComputeAverageResponse {
  double average = 1;
}

message FindMaximumRequest {
  int32 arg = 1;
}

message FindMaximumResponse {
  int32 max = 1;
}

message SquareRootRequest {
  int32 number = 1;
}

message SquareRootResponse {
  double sqrt = 1;
}

service CalculatorService{
  // Unary
  rpc Sum(SumRequest) returns (SumResponse) {};

  // Client Streaming
  rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

  // BiDi Streaming
  rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

  // error handling
  // this RPC will throw an exception if the sent number is negative
  // The error being sent is of type INVALID_ARGUMENT
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}